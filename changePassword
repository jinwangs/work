#!/usr/bin/env python
#coding:utf8
#随机生成自定义长度密码
from random import choice
import string,pickle

def GenPassword(length=8,chars=string.ascii_letters+string.digits):
    return ''.join([choice(chars) for i in range(length)])
def passlist(r_user,c_user,ip_list,web_list):
    dic={}
    for i in ip_list:
        if i.split()[1] in web_list:
            dic[i.split()[1]]=[i.split()[0],{r_user:GenPassword(32),c_user:GenPassword(32)}]
        else:
            dic[i.split()[1]]=[i.split()[0],{r_user:GenPassword(32)}]
    return dic
def ip_list(ip_file):
    with open(ip_file) as file:
        ip_file=file.read().strip().split("/n")
        #web_list=[i for i in ip_file if i in web_list]
        return ip_file
def save_dic():
    dic=main()
    with open("../host_message.pickle","w") as fd:
        pickle.dump(dic,fd)
def main():
    file="/root/cui/script/python/ip.txt"
    web_list=[ip1,ip2,ip3,ip4]
    file_list=ip_list(file)
    file_dic_pass=passlist("root","www",file_list,web_list)
    return file_dic_pass

if __name__=="__main__":
    save_dic()


#!/usr/bin/env python
#coding:utf8
#批量修改密码主程序
import pickle
from ssh_co.ssh_connect import sshd
from command.ip_passwd import save_dic,main
from execl import set_execl
def read_dic():
    with open("host_message.pickle","rb") as f:
        return pickle.load(f)
def ssh_main():
    pid_host=1
    host_message=read_dic()
    host_list=host_message.keys()
    print host_list
    for host_msg in xrange(len(host_list)):
        host_attribute=(host_list[host_msg],port,user,passwd)
        ssh_conn=sshd(host_attribute,pid_host)
        if "www" in host_message[host_list[host_msg]][1].keys():
            for username in xrange(len(host_message[host_list[host_msg]][1].keys())):
                try:
                    user=host_message[host_list[host_msg]][1].keys()[username]
                    passwd=host_message[host_list[host_msg]][1][host_message[host_list[host_msg]][1].keys()[username]]
                    results=ssh_conn.set_ssh_cmd(u"/bin/echo %s|/usr/bin/passwd --stdin %s" %(passwd,user))
                    print results,host_list[host_msg],user+"-----------"+passwd
                except:
                    print results,host_list[host_msg],user+"-----except------"+passwd
        else:
            user=host_message[host_list[host_msg]][1].keys()[0]
            passwd=host_message[host_list[host_msg]][1][host_message[host_list[host_msg]][1].keys()[0]]
            result=ssh_conn.set_ssh_cmd(u"/bin/echo %s|/usr/bin/passwd --stdin %s" %(passwd,user))
            print result,host_list[host_msg],user+"-----------"+passwd
if __name__ == "__main__":
    dic=main()
    with open("host_message.pickle","w") as fd:
        pickle.dump(dic,fd)
    set_execl()
    ssh_main()
    
    
    
    
    
    #!/usr/local/bin/python


import string
import os
import paramiko


#设置需要修改的密码和用户名
setpasswd="222222"
setuser="root"
#读配置文件(IP,端口，用户名，密码),以逗号分割的字符串，LINUX格式的回车
#192.168.1.118,6868,root,111111
filepwd="./user.txt"

#读配置文件，返回IP,端口，用户名，密码
def get_config_file(lines):
    ip="192.168.1.100"
    port=6000
    user="root"
    password="111111"
    temp_str=string.split(lines,',') #逗号分割
    ip=temp_str[0]
    port=int(temp_str[1])
    user=temp_str[2]
    password=temp_str[3]
    password=string.split(password,'\n')
    password = password[0]
    return(ip,port,user,password)


#修改用户名和密码
def connect_modify(ip_port_user_pwd):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        client.connect(ip_port_user_pwd[0],ip_port_user_pwd[1],ip_port_user_pwd[2],ip_port_user_pwd[3], timeout=5)
    #    print ip_port_user_pwd[0],ip_port_user_pwd[1],ip_port_user_pwd[2],ip_port_user_pwd[3]
    except:
        print ip_port_user_pwd[0],"network not connect"
        return 0
    stdin, stdout, stderr = client.exec_command("/bin/echo %s|/usr/bin/passwd --stdin %s" %(setpasswd,setuser))
    client.close()
    return 1



def main():
    print "nn","setpassword",setpasswd
    try:
            f=open(filepwd,"r")
    except:
        print filepwd,"not open ip and passwd file"
        return 0
    for lines in f.readlines() :
        #print lines
            readline=string.split(lines,'\n')
        if len(lines) >20:
            ip_port_user_pwd = get_config_file(lines)
            re=connect_modify(ip_port_user_pwd)
            if re ==1 :
                print ip_port_user_pwd[0],"OK"
        #else
    f.close()

main()
./user.txt文件的生成按自己要求写！(如下，如果windows下写的复制到程序的目录中,dos2unix命令改一下回事符哟)

192.168.1.110,16000,root,111111
192.168.1.111,16000,root,111111
